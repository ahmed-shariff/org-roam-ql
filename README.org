#+title: org-roam-ql - An org-ql interface for org-roam
#+author: Shariff AM Faleel
#+language: en

* org-roam-ql

This package provides an org-ql interface for org-roam.

*This package is under active development.*

The ~org-roam~ buffer is good at providing context to the nodes I am looking at, while ~org-ql~ provides a very nice interface for querying org files and accompanying tools to work with the results, particularly, the use of the org-agenda view.

This package provides an interface to query your org-roam database and view the results in either an org-roam buffer or an org-ql buffer.

** Screenshots

[[images/demo1.gif]]

[[images/demo2.gif]]

** Installation
TBD (quelpa, straight?)

** Usage
*** Commands/functions

- ~(org-roam-ql-nodes SOURCE-OR-QUERY)~ - Given a SOURCE-OR-QUERY, return a list of nodes. SOURCE-OR-QUERY can be one of the following:
  - A list of parameters that can be passed to ~org-roam-db-query~. Should be a list of the form ~(QUERY ARG1 ARG2...)~. The result of calling ~org-roam-db-query~ with these parameters should return a list of records where the first element is the ID of a corresponding node. For example:
  #+begin_src emacs-lisp
  (org-roam-ql-nodes '([:select [id] :from nodes :where (= todo \"TODO\")]))
  #+end_src
  - A buffer or buffer-name of a ~org-roam~ buffer or a ~org-roam-ql~ buffer.
  - A function that returns a list of ~org-roam-nodes~
  - A QUERY which can be passed to ~org-roam-query~, which in itself is a ~org-ql~ predicate.
    #+begin_src emacs-lisp
    (org-roam-ql-nodes '(and (todo "TODO") (tags "tag1" "tag2") "*org-roam*"))
    #+end_src
    The QUERY passed above would test on all org-roam-nodes returned by ~(org-roam-nodes-list)~. In the above example, the result would contain any nodes that have todo set to TODO, have tags "tag1" and "tag2" and is in the org-roam buffer.
    Currently, the query can have the following predicates:
      - ~(or ARG1 ARG2 ...)~ : Test if a node satisfies any of the parameters (when it's a predicate) or is contained in any of them (acceptable values for QUERY in ~org-roam-ql-nodes~). ARG1, ARG2, etc. are any other predicates or an acceptable value QUERY for ~org-roam-ql-nodes~.
      - ~(and ARG1 ARG2 ...)~ : Similar to ~or~, but should satisfy all conditions or contained in the result of acceptable values for QUERY.
      - ~(file REGEXP &optional EXACT)~ : Test if nodes file name matches REGEXP. If EXACT is non-nil, the file slot should be an exact match to REGEXP. Note the file slot of an org-roam-node would contain the absolute path.
      - ~(file-title REGEXP &optional EXACT)~ : Similar to ~file~, tests the file-title slot of a node.
      - ~(id ID)~ : Tests if the ID of a node is a match to the value passed.
      - ~(level LEVEL)~ : Tests if the level of a node is equal to LEVEL.
      - ~(todo REGEXP &optional EXACT)~ : Similar to ~file~, tests the todo state of a node.
      - ~(priority REGEXP &optional EXACT)~ : Similar to ~file~, tests the priority of a node.
      - ~(scheduled)~ : TBD
      - ~(deadline)~ : TBD
      - ~(title REGRXP &optional EXACT)~ : Similar to ~file~, tests the title of a node.
      - ~(properties PROP PROP-VAL)~ : Tests if the value of the property of a node PROP is a match to PROP-VAL. PROP-VAL can be a regular expression.
      - ~(tags TAG1 TAG2 ...)~ : Tests if the tags of a node have TAG1, TAG2, etc.
      - ~(refs REGEXP &optional EXACT)~ : Similar to ~file~, tests the nodes refs slot.
      - ~(backlink-to QUERY)~ : Tests if the node has a backlink to any of the nodes from the resulting QUERY. QUERY is acceptable value for ~org-roam-ql-nodes~.
      - ~(backlink-from QUERY)~ : Similar to ~backlink-to~, tests if there are any backlinks from (forwardlinks) the resulting nodes from QUERY.
      - ~(in-buffer BUFFER-NAME)~ : This is similar to passing a buffer-name to ~org-roam-ql-nodes~. Tests if a node is in the org-roam buffer named BUFFER-NAME.
      - ~(nodes-list NODES-LIST)~ : This is similar to passing a list of nodes to ~org-roam-ql-nodes~. Tests if a node is in the NODES-LIST.
      - ~(function FUNC)~ : This is similar to passing a function to ~org-roam-ql-nodes~. Tests if the node is in the result of executing the function FUNC.
      - ~(funcall FUNC)~ : Tests a node with the function FUNC, which takes on parameter, a org-roam node. Test passes if the function returns non-nil.
- ~(org-roam-ql-defpred NAME EXTRACTION-FUNCTION COMPARISON-FUNCTION)~ - Creates a predicate that can be used in QUERY to ~org-roam-ql-nodes~. For example, for a predicate defined as follows:
  #+begin_src emacs-lisp
  (org-roam-ql-defpred sample extraction-func comparison-func)
  #+end_src

  When the following predicate is used in the ~QUERY~:
  #+begin_src emacs-lisp
  (sample arg1 arg2)
  #+end_src

  It tests each ~node~ as follows:
  #+begin_src emacs-lisp
  (apply comparison-func (append (list (funcall extraction-func node)) arg1 arg2))
  #+end_src

  The ~EXTRACTION-FUNCTION~ is a function that takes an org-roam-node and returns a value that will be passed as the first parameter to ~COMPARISON-FUNCTION~. The remainder of the parameters when calling the predicate is passed as remaining parameters ~COMPARISON-FUNCTION~. If the ~COMPARITION-FUNCTION~ returns a non-nil value, it will be included in the result.
- ~(org-roam-ql-view SOURCE-OR-QUERY &optional TITLE QUERY SUPER-GROUPS)~ - This creates a ~org-ql~ buffer with the nodes of the corresponding ~SOURCE-OR-QUERY~ with ~TITLE~. Additionally, this also takes a ~org-ql~ query, which will be used to further filter the results from the ~SOURCE-OR-QUERY~. ~SOURCE-OR-QUERY~ is the same as ~org-roam-ql-node~. When called interactively. This can also be called interactively.
- ~org-roam-ql-select~ - Similar to ~org-ql-select~. The first parameter is the same as ~SOURCE-OR-QUERY~.
- ~org-roam-ql-ql-buffer-from-roam-buffer~ - Displays the nodes in a org-roam-like-buffer in a ~org-ql~ buffer
- ~org-roam-ql-roam-buffer-from-ql-buffer~ - Displays a ~org-ql~ buffer, in a org-roam-like-buffer (uses the ~org-roam-ql-mode~).
